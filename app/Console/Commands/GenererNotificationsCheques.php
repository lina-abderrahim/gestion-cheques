<?php

namespace App\Console\Commands;

use Illuminate\Console\Command;
use App\Models\Cheque;
use App\Models\Notification;
use Illuminate\Support\Facades\Log;
use Carbon\Carbon;

class GenererNotificationsCheques extends Command
{
    // Nom de la commande
    protected $signature = 'cheques:generer-notifications';

    // Description visible dans `php artisan list`
    protected $description = 'G√©n√®re des notifications pour les ch√®ques entrants (√©ch√©ance demain) et sortants (√©ch√©ance aujourd\'hui)';

    public function handle()
    {
        $timezone = config('app.timezone');
        $aujourdhui = Carbon::today();
        $demain = Carbon::tomorrow();

        // Log d'ex√©cution
        Log::info('üïí Commande de notification d√©clench√©e √† : ' . now());
        Log::info('üåç Timezone Laravel : ' . $timezone);
        Log::info('üìÖ Aujourd\'hui : ' . $aujourdhui->toDateString());
        Log::info('üìÖ Demain : ' . $demain->toDateString());

        // === Notifications pour ch√®ques ENTRANTS (√©ch√©ance DEMAIN) ===
        $chequesEntrants = Cheque::where('type', 'entrant')
            ->whereDate('date_echeance', $demain)
            ->get();

        Log::info('üìä Nombre de ch√®ques entrants √† notifier : ' . $chequesEntrants->count());

        foreach ($chequesEntrants as $cheque) {
            $existe = Notification::where('cheque_id', $cheque->id)
                ->where('type', 'alerte_entrant')
                ->whereDate('created_at', $aujourdhui)
                ->exists();

            if (!$existe) {
                Notification::create([
                    'message' => "üìå √âch√©ance proche pour le ch√®que #{$cheque->numero} (entrant)",
                    'type' => 'alerte_entrant',
                    'cheque_id' => $cheque->id,
                    'is_read' => false,
                ]);

                Log::info("‚úÖ Notification cr√©√©e pour ch√®que entrant #{$cheque->numero}");
            }
        }

        // === Notifications pour ch√®ques SORTANTS (√©ch√©ance AUJOURD‚ÄôHUI) ===
        $chequesSortants = Cheque::where('type', 'sortant')
            ->whereDate('date_echeance', $aujourdhui)
            ->get();

        Log::info('üìä Nombre de ch√®ques sortants √† notifier : ' . $chequesSortants->count());

        foreach ($chequesSortants as $cheque) {
            $existe = Notification::where('cheque_id', $cheque->id)
                ->where('type', 'alerte_sortant')
                ->whereDate('created_at', $aujourdhui)
                ->exists();

            if (!$existe) {
                Notification::create([
                    'message' => "üìå √âch√©ance aujourd'hui pour le ch√®que #{$cheque->numero} (sortant)",
                    'type' => 'alerte_sortant',
                    'cheque_id' => $cheque->id,
                    'is_read' => false,
                ]);

                Log::info("‚úÖ Notification cr√©√©e pour ch√®que sortant #{$cheque->numero}");
            }
        }

        $this->info('‚úÖ Notifications g√©n√©r√©es avec succ√®s.');
    }
}
